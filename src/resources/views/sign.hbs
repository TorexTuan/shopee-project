

{{#if (checkSignSlug slug)}}
{{!-- sign up --}}
<form class="shopee__form__sign" method="POST"  action="/sign-up">
    <div class="shopee__form__sign__top">
        <h3 class="form__sign__top__title__sign-up">
            {{title}}
        </h3>
        {{#if error}}
            <div class="alert alert-danger" role="alert">
                {{error}}
            </div>
        {{/if}}
        <div class="form__sign__top__input__block father__input">
            <div class="form__sign__top__input__wrapper">
                <input type="text" id="username" name="username" placeholder="Username" class="form__sign__top__input">
            </div>
            <div class="form__input__message"></div>
        </div>
         <div class="form__sign__top__input__block father__input">
             <div class="form__sign__top__input__wrapper">
                <input type="email" id="email" name="email" placeholder="email" class="form__sign__top__input">
            </div>
            <div class="form__input__message"></div>
         </div>
         <div class="form__sign__top__input__block father__input">
            <div class="form__sign__top__input__wrapper">
                <input type="password" id="password" name="password" placeholder="Password" class="form__sign__top__input">
                <svg fill="none" viewBox="0 0 20 10" class="eye-close-image">
                    <path stroke="none" fill="#000" fill-opacity=".54" d="M19.834 1.15a.768.768 0 00-.142-1c-.322-.25-.75-.178-1 .143-.035.036-3.997 4.712-8.709 4.712-4.569 0-8.71-4.712-8.745-4.748a.724.724 0 00-1-.071.724.724 0 00-.07 1c.07.106.927 1.07 2.283 2.141L.631 5.219a.69.69 0 00.036 1c.071.142.25.213.428.213a.705.705 0 00.5-.214l1.963-2.034A13.91 13.91 0 006.806 5.86l-.75 2.535a.714.714 0 00.5.892h.214a.688.688 0 00.679-.535l.75-2.535a9.758 9.758 0 001.784.179c.607 0 1.213-.072 1.785-.179l.75 2.499c.07.321.392.535.677.535.072 0 .143 0 .179-.035a.714.714 0 00.5-.893l-.75-2.498a13.914 13.914 0 003.248-1.678L18.3 6.147a.705.705 0 00.5.214.705.705 0 00.499-.214.723.723 0 00.036-1l-1.82-1.891c1.463-1.071 2.32-2.106 2.32-2.106z"></path>
                </svg>
                <svg fill="none" viewBox="0 0 20 12" class="eye-open-image" style="display: none;">
                    <path stroke="none" fill="#000" fill-opacity=".54" fill-rule="evenodd" d="M19.975 5.823V5.81 5.8l-.002-.008v-.011a.078.078 0 01-.002-.011v-.002a.791.791 0 00-.208-.43 13.829 13.829 0 00-1.595-1.64c-1.013-.918-2.123-1.736-3.312-2.368-.89-.474-1.832-.867-2.811-1.093l-.057-.014a2.405 2.405 0 01-.086-.02L11.884.2l-.018-.003A9.049 9.049 0 0010.089 0H9.89a9.094 9.094 0 00-1.78.197L8.094.2l-.016.003-.021.005a1.844 1.844 0 01-.075.017l-.054.012c-.976.226-1.92.619-2.806 1.09-1.189.635-2.3 1.45-3.31 2.371a13.828 13.828 0 00-1.595 1.64.792.792 0 00-.208.43v.002c-.002.007-.002.015-.002.022l-.002.01V5.824l-.002.014a.109.109 0 000 .013L0 5.871a.206.206 0 00.001.055c0 .01 0 .018.002.027 0 .005 0 .009.003.013l.001.011v.007l.002.01.001.013v.002a.8.8 0 00.208.429c.054.067.11.132.165.197a13.9 13.9 0 001.31 1.331c1.043.966 2.194 1.822 3.428 2.48.974.52 2.013.942 3.09 1.154a.947.947 0 01.08.016h.003a8.864 8.864 0 001.596.16h.2a8.836 8.836 0 001.585-.158l.006-.001a.015.015 0 01.005-.001h.005l.076-.016c1.079-.212 2.118-.632 3.095-1.153 1.235-.66 2.386-1.515 3.43-2.48a14.133 14.133 0 001.474-1.531.792.792 0 00.208-.43v-.002c.003-.006.003-.015.003-.022v-.01l.002-.008c0-.004 0-.009.002-.013l.001-.012.001-.015.001-.019.002-.019a.07.07 0 01-.01-.036c0-.009 0-.018-.002-.027zm-6.362.888a3.823 3.823 0 01-1.436 2.12l-.01-.006a3.683 3.683 0 01-2.178.721 3.67 3.67 0 01-2.177-.721l-.009.006a3.823 3.823 0 01-1.437-2.12l.014-.01a3.881 3.881 0 01-.127-.974c0-2.105 1.673-3.814 3.738-3.816 2.065.002 3.739 1.711 3.739 3.816 0 .338-.047.662-.128.975l.011.009zM8.145 5.678a1.84 1.84 0 113.679 0 1.84 1.84 0 01-3.679 0z" clip-rule="evenodd"></path>
                </svg>
            </div>
            <div class="form__input__message"></div>
        </div>
        <button type="submit" class="form__sign__top__button js_submit_btn">TIẾP THEO</button>
    </div>
    <div class="shopee__form__sign__middle">
        <span class="form__sign__middle__line"></span>
        <span class="form__sign__middle__text">HOẶC</span>
        <span class="form__sign__middle__line"></span>
    </div>
    <div class="shopee__form__sign__bottom">
        <div class="form__sign__bottom__app">
            <a href="" class="form__sign__bottom__app__link app__link__facebook">
                <div class="app__link__facebook__icon app__icon__background"></div> Facebook
            </a>
            <a href="" class="form__sign__bottom__app__link app__link__google">
                <div class="app__link__google__icon__wrapper">
                    <div class="app__link__google__icon app__icon__background"></div> 
                </div>
                Google
            </a>
            <a href="" class="form__sign__bottom__app__link app__link__apple">
                <div class="app__link__apple__icon app__icon__background"></div> Apple
            </a>
        </div>

        <div class="form__sign__bottom__term-policy">
            Bằng việc đăng kí, bạn đã đồng ý với Shopee về <br>
            <a href="">Điều khoản dịch vụ</a>
            &
            <a href="">Chính sách bảo mật</a>
        </div>

        <div class="form__sign__bottom__ask">
            <span>Bạn đã có tài khoản?</span>
            <a href="./sign-in" class="">Đăng nhập</a>
        </div>
    </div>
</form>

{{else}}
{{!-- sign in --}}
<form class="shopee__form__sign" method="POST"  action="/sign-in">
    <div class="shopee__form__sign__top">
        <div class="form__sign__top__title__block">
            <h3 class="form__sign__top__title__sign-in">
                {{title}}
            </h3>
            <p class="form__sign__top__message">
                Đăng nhập với mã QR
            </p>
            <a href="" class="form__sign__top__qr-link">
                <svg width="40" height="40" fill="none" class="form__sign__top__qr-image">
                    <g clip-path="url(#clip0)">
                        <path fill-rule="evenodd" clip-rule="evenodd" d="M18 0H0v18h18V0zM3 15V3h12v12H3zM18 22H0v18h18V22zm-3 15H3V25h12v12zM40 0H22v18h18V0zm-3 15H25V3h12v12z" fill="#EE4D2D"></path>
                        <path d="M37 37H22.5v3H40V22.5h-3V37z" fill="#EE4D2D"></path>
                        <path d="M27.5 32v-8h-3v8h3zM33.5 32v-8h-3v8h3zM6 6h6v6H6zM6 28h6v6H6zM28 6h6v6h-6z" fill="#EE4D2D"></path>
                        <path fill="#fff" d="M-4.3 4l44 43.9-22.8 22.7-43.9-44z"></path>
                    </g>
                    <defs>
                        <clipPath id="clip0">
                            <path fill="#fff" d="M0 0h40v40H0z"></path>
                        </clipPath>
                    </defs>
                </svg>
            </a>
        </div>
        {{#if error}}
            <div class="alert alert-danger" role="alert">
                {{error}}
            </div>
        {{/if}}
        <div class="form__sign__top__input__block father__input">
            <div class="form__sign__top__input__wrapper">
                <input type="email" id="email" name="email" placeholder="Email..." autofocus="autofocus" class="form__sign__top__input-username">
            </div>
            <div class="form__input__message"></div>
        </div>

        <div class="form__sign__top__input__block father__input">
            <div class="form__sign__top__input__wrapper">
                <input type="password" id="password" name="password" placeholder="Mật khẩu" autofocus="autofocus" class="form__sign__top__input-password">
                <svg fill="none" viewBox="0 0 20 10" class="eye-close-image">
                    <path stroke="none" fill="#000" fill-opacity=".54" d="M19.834 1.15a.768.768 0 00-.142-1c-.322-.25-.75-.178-1 .143-.035.036-3.997 4.712-8.709 4.712-4.569 0-8.71-4.712-8.745-4.748a.724.724 0 00-1-.071.724.724 0 00-.07 1c.07.106.927 1.07 2.283 2.141L.631 5.219a.69.69 0 00.036 1c.071.142.25.213.428.213a.705.705 0 00.5-.214l1.963-2.034A13.91 13.91 0 006.806 5.86l-.75 2.535a.714.714 0 00.5.892h.214a.688.688 0 00.679-.535l.75-2.535a9.758 9.758 0 001.784.179c.607 0 1.213-.072 1.785-.179l.75 2.499c.07.321.392.535.677.535.072 0 .143 0 .179-.035a.714.714 0 00.5-.893l-.75-2.498a13.914 13.914 0 003.248-1.678L18.3 6.147a.705.705 0 00.5.214.705.705 0 00.499-.214.723.723 0 00.036-1l-1.82-1.891c1.463-1.071 2.32-2.106 2.32-2.106z"></path>
                </svg>
                <svg fill="none" viewBox="0 0 20 12" class="eye-open-image" style="display: none;">
                    <path stroke="none" fill="#000" fill-opacity=".54" fill-rule="evenodd" d="M19.975 5.823V5.81 5.8l-.002-.008v-.011a.078.078 0 01-.002-.011v-.002a.791.791 0 00-.208-.43 13.829 13.829 0 00-1.595-1.64c-1.013-.918-2.123-1.736-3.312-2.368-.89-.474-1.832-.867-2.811-1.093l-.057-.014a2.405 2.405 0 01-.086-.02L11.884.2l-.018-.003A9.049 9.049 0 0010.089 0H9.89a9.094 9.094 0 00-1.78.197L8.094.2l-.016.003-.021.005a1.844 1.844 0 01-.075.017l-.054.012c-.976.226-1.92.619-2.806 1.09-1.189.635-2.3 1.45-3.31 2.371a13.828 13.828 0 00-1.595 1.64.792.792 0 00-.208.43v.002c-.002.007-.002.015-.002.022l-.002.01V5.824l-.002.014a.109.109 0 000 .013L0 5.871a.206.206 0 00.001.055c0 .01 0 .018.002.027 0 .005 0 .009.003.013l.001.011v.007l.002.01.001.013v.002a.8.8 0 00.208.429c.054.067.11.132.165.197a13.9 13.9 0 001.31 1.331c1.043.966 2.194 1.822 3.428 2.48.974.52 2.013.942 3.09 1.154a.947.947 0 01.08.016h.003a8.864 8.864 0 001.596.16h.2a8.836 8.836 0 001.585-.158l.006-.001a.015.015 0 01.005-.001h.005l.076-.016c1.079-.212 2.118-.632 3.095-1.153 1.235-.66 2.386-1.515 3.43-2.48a14.133 14.133 0 001.474-1.531.792.792 0 00.208-.43v-.002c.003-.006.003-.015.003-.022v-.01l.002-.008c0-.004 0-.009.002-.013l.001-.012.001-.015.001-.019.002-.019a.07.07 0 01-.01-.036c0-.009 0-.018-.002-.027zm-6.362.888a3.823 3.823 0 01-1.436 2.12l-.01-.006a3.683 3.683 0 01-2.178.721 3.67 3.67 0 01-2.177-.721l-.009.006a3.823 3.823 0 01-1.437-2.12l.014-.01a3.881 3.881 0 01-.127-.974c0-2.105 1.673-3.814 3.738-3.816 2.065.002 3.739 1.711 3.739 3.816 0 .338-.047.662-.128.975l.011.009zM8.145 5.678a1.84 1.84 0 113.679 0 1.84 1.84 0 01-3.679 0z" clip-rule="evenodd"></path>
                </svg>
            </div>
            <div class="form__input__message"></div>
        </div>

        <button type="submit" class="form__sign__top__button js_submit_btn">ĐĂNG NHẬP</button>

        <div class="form__sign__top__forget-password">
            <a href="">Quên mật khẩu</a>
            <a href="">Đăng nhập với SMS</a>
        </div>
    </div>
    <div class="shopee__form__sign__middle">
        <span class="form__sign__middle__line"></span>
        <span class="form__sign__middle__text">HOẶC</span>
        <span class="form__sign__middle__line"></span>
    </div>
    <div class="shopee__form__sign__bottom">
        <div class="form__sign__bottom__app">
            <a href="" class="form__sign__bottom__app__link app__link__facebook">
                <div class="app__link__facebook__icon app__icon__background"></div> Facebook
            </a>
            <a href="" class="form__sign__bottom__app__link app__link__google">
                <div class="app__link__google__icon__wrapper">
                    <div class="app__link__google__icon app__icon__background"></div> 
                </div>
                Google
            </a>
            <a href="" class="form__sign__bottom__app__link app__link__apple">
                <div class="app__link__apple__icon app__icon__background"></div> Apple
            </a>
        </div>

        <div class="form__sign__bottom__ask">
            <span>Bạn mới biết đến Shopee?</span>
            <a href="./sign-up" class="">Đăng ký</a>
        </div>
    </div>
</form>

{{/if}}


<script>

    //Library for log-in form
    function Validator(option) {

        const formElement = document.querySelector(option.formSelector)
        const tickIcon = formElement.querySelector(option.symbolTickElement)
        const multipleRules = {}

        //Hàm xử lý rules
        function handleRules(inputElement, rule) {
            var errorMessage
            const fatherInputElement = inputElement.closest(option.fatherInputSelector)
            const errorElement = fatherInputElement.querySelector(option.messageSelector)
            const wrapperInput = fatherInputElement.querySelector(option.wrapperInput)      

            //Lặp qua tất cả các function test
            for(var testRule of multipleRules[rule.selector]) {
                errorMessage = testRule(inputElement.value)
                if(errorMessage) {
                    break
                }
            }

            //Xử lý render ra lỗi input sau khi kiểm tra rule

            if(errorMessage) {
                errorElement.innerText = errorMessage   
                errorElement.classList.add('error__input')
                wrapperInput.classList.add('error__input__background')
                wrapperInput.classList.add('error__input__border')
                inputElement.classList.add('error__input__background')
            }else {
                errorElement.innerText = ''
                errorElement.classList.remove('error__input')
                wrapperInput.classList.remove('error__input__border')
                wrapperInput.classList.remove('error__input__background')
                inputElement.classList.remove('error__input__background')
            }


            return !errorMessage
        }


        //Hàm xử lý khi focus vào input 
        function handleFocusInput(inputElement) {
            const fatherInputElement = inputElement.closest(option.fatherInputSelector)
            const wrapperInput = fatherInputElement.querySelector(option.wrapperInput)

            if(inputElement === document.activeElement) {
                wrapperInput.classList.add('border-focus-input')
            }else {
                 wrapperInput.classList.remove('border-focus-input')
            }

        }

        //Lấy data đưa vào db
        if(formElement) {
            formElement.onsubmit = function(e) {
                
                var isFormValid = true      
                option.rules.forEach(rule => {
                    const inputElement = formElement.querySelector(rule.selector)
                    if(inputElement) {
                        isFormValid = handleRules(inputElement, rule)
                    }
                })

                if(!isFormValid) {
                     e.preventDefault()
                }
            }
        }

        
        // Lặp qua các rule để xử lý
        option.rules.forEach(rule => {
            const inputElement = formElement.querySelector(rule.selector)
            const submitBtn = formElement.querySelector(option.submitBtn)
            const openEyesIcon = formElement.querySelector(option.openEyesIcon)
            const closeEyesIcon = formElement.querySelector(option.closeEyesIcon)

            if(Array.isArray(multipleRules[rule.selector])) {
                multipleRules[rule.selector].push(rule.test)
            }else {
                multipleRules[rule.selector] = [rule.test]
            }        
            
            if(inputElement) {
                //Xử lý con mắt icon ở password input
                if(inputElement.id === 'password') {
                    openEyesIcon.onclick = function() {
                        this.style.display = 'none'
                        closeEyesIcon.style.display = 'block'
                        inputElement.type = 'password'
                    }

                    closeEyesIcon.onclick = function() {
                        this.style.display = 'none'
                        openEyesIcon.style.display = 'block'
                        inputElement.type = 'text'
                    }
                }

                //Hàm xử lý rule được gọi sau khi input blur
                inputElement.oninput = function() {
                    handleRules(inputElement, rule)
                }

                inputElement.onblur = function() {
                    handleFocusInput(inputElement)
                }

                inputElement.onfocus = function() {
                    handleFocusInput(inputElement)
                }
            }
        })
    }

    // Set rules
    Validator.isRequired = function(selector, message) {
        return {
            selector: selector,
            test: function(value) {
                return value.length > 0 ? undefined : message || 'Vui lòng điền vào mục này'
            }
        }
    }

    Validator.isEmail = function(selector, message) {
        return {
            selector: selector,
            test: function(value) {
               const regexEmail = /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/
                return regexEmail.test(value) ? undefined : message || 'Email không hợp lệ'
            }
        }
    }

    Validator.isPassword = function(selector, message) {
        return {
            selector: selector,
            test: function(value) {
                const passwordRegex = /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/
                return passwordRegex.test(value) ? undefined : message || 'Mật khẩu chứa ít nhất 8 kí tự: Gồm chữ hoa, chữ thường và số'
            }
        }
    }

    Validator({
        formSelector: ".shopee__form__sign",
        messageSelector: ".form__input__message",
        fatherInputSelector: ".father__input",
        symbolTickElement: ".form__sign__top__tick-icon",
        wrapperInput: ".form__sign__top__input__wrapper",
        submitBtn: ".js_submit_btn",
        openEyesIcon: ".eye-open-image",
        closeEyesIcon: ".eye-close-image",
        rules: [
            Validator.isRequired('#username'),
            Validator.isRequired('#email', 'Vui lòng nhập Email'),
            Validator.isEmail('#email'),
            Validator.isRequired('#password', 'Bạn chưa nhập mật khẩu'),
            Validator.isPassword('#password'),
        ],
    })


</script>
    
